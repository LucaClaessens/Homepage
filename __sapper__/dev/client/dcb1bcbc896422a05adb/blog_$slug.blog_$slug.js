(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["blog_$slug"],{

/***/ "./src/routes/blog/[slug].svelte":
/*!***************************************!*\
  !*** ./src/routes/blog/[slug].svelte ***!
  \***************************************/
/*! exports provided: default, preload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "preload", function() { return preload; });
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _Users_Luca_Desktop_Homepage_src_routes_blog_slug_svelte_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/routes/blog/[slug].svelte.css */ "./src/routes/blog/[slug].svelte.css");
/* harmony import */ var _Users_Luca_Desktop_Homepage_src_routes_blog_slug_svelte_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_Users_Luca_Desktop_Homepage_src_routes_blog_slug_svelte_css__WEBPACK_IMPORTED_MODULE_1__);
/* src/routes/blog/[slug].svelte generated by Svelte v3.12.1 */


const file = "src/routes/blog/[slug].svelte";

function create_fragment(ctx) {
	var title_value, t0, h1, t1_value = ctx.post.title + "", t1, t2, div, raw_value = ctx.post.html + "";

	document.title = title_value = ctx.post.title;

	const block = {
		c: function create() {
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			h1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("h1");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t1_value);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h()
		},

		l: function claim(nodes) {
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);

			h1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "H1", {}, false);
			var h1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(h1);

			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(h1_nodes, t1_value);
			h1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach_dev"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);

			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach_dev"]);
			this.h();
		},

		h: function hydrate() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_location"])(h1, file, 61, 0, 2909);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr_dev"])(div, "class", "content svelte-jdqhj6");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_location"])(div, file, 63, 0, 2932);
		},

		m: function mount(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert_dev"])(target, t0, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert_dev"])(target, h1, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append_dev"])(h1, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert_dev"])(target, t2, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert_dev"])(target, div, anchor);
			div.innerHTML = raw_value;
		},

		p: function update(changed, ctx) {
			if ((changed.post) && title_value !== (title_value = ctx.post.title)) {
				document.title = title_value;
			}

			if ((changed.post) && t1_value !== (t1_value = ctx.post.title + "")) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data_dev"])(t1, t1_value);
			}

			if ((changed.post) && raw_value !== (raw_value = ctx.post.html + "")) {
				div.innerHTML = raw_value;
			}
		},

		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],

		d: function destroy(detaching) {
			if (detaching) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach_dev"])(t0);
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach_dev"])(h1);
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach_dev"])(t2);
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach_dev"])(div);
			}
		}
	};
	Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["dispatch_dev"])("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

async function preload({ params, query }) {
	// the `slug` parameter is available because
	// this file is called [slug].svelte
	const res = await this.fetch(`blog/${params.slug}.json`);
	const data = await res.json();

	if (res.status === 200) {
		return { post: data };
	} else {
		this.error(res.status, data.message);
	}
}

function instance($$self, $$props, $$invalidate) {
	let { post } = $$props;

	const writable_props = ['post'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Slug> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('post' in $$props) $$invalidate('post', post = $$props.post);
	};

	$$self.$capture_state = () => {
		return { post };
	};

	$$self.$inject_state = $$props => {
		if ('post' in $$props) $$invalidate('post', post = $$props.post);
	};

	return { post };
}

class Slug extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponentDev"] {
	constructor(options) {
		super(options);
		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], ["post"]);
		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["dispatch_dev"])("SvelteRegisterComponent", { component: this, tagName: "Slug", options, id: create_fragment.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.post === undefined && !('post' in props)) {
			console.warn("<Slug> was created without expected prop 'post'");
		}
	}

	get post() {
		throw new Error("<Slug>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set post(value) {
		throw new Error("<Slug>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Slug);




/***/ }),

/***/ "./src/routes/blog/[slug].svelte.css":
/*!*******************************************!*\
  !*** ./src/routes/blog/[slug].svelte.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

throw new Error("Module parse failed: Unexpected token (1:0)\nYou may need an appropriate loader to handle this file type.\n> .content.svelte-jdqhj6 h2{font-size:1.4em;font-weight:500}.content.svelte-jdqhj6 pre{background-color:#f9f9f9;-webkit-box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-jdqhj6 pre code{background-color:transparent;padding:0}.content.svelte-jdqhj6 ul{line-height:1.5}.content.svelte-jdqhj6 li{margin:0 0 0.5em 0}\n| /*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9MdWNhL0Rlc2t0b3AvSG9tZXBhZ2Uvc3JjL3JvdXRlcy9ibG9nL1tzbHVnXS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG5cdGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG5cdFx0Ly8gdGhlIGBzbHVnYCBwYXJhbWV0ZXIgaXMgYXZhaWxhYmxlIGJlY2F1c2Vcblx0XHQvLyB0aGlzIGZpbGUgaXMgY2FsbGVkIFtzbHVnXS5zdmVsdGVcblx0XHRjb25zdCByZXMgPSBhd2FpdCB0aGlzLmZldGNoKGBibG9nLyR7cGFyYW1zLnNsdWd9Lmpzb25gKTtcblx0XHRjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuXHRcdGlmIChyZXMuc3RhdHVzID09PSAyMDApIHtcblx0XHRcdHJldHVybiB7IHBvc3Q6IGRhdGEgfTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5lcnJvcihyZXMuc3RhdHVzLCBkYXRhLm1lc3NhZ2UpO1xuXHRcdH1cblx0fVxuPC9zY3JpcHQ+XG5cbjxzY3JpcHQ+XG5cdGV4cG9ydCBsZXQgcG9zdDtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG5cdC8qXG5cdFx0QnkgZGVmYXVsdCwgQ1NTIGlzIGxvY2FsbHkgc2NvcGVkIHRvIHRoZSBjb21wb25lbnQsXG5cdFx0YW5kIGFueSB1bnVzZWQgc3R5bGVzIGFyZSBkZWFkLWNvZGUtZWxpbWluYXRlZC5cblx0XHRJbiB0aGlzIHBhZ2UsIFN2ZWx0ZSBjYW4ndCBrbm93IHdoaWNoIGVsZW1lbnRzIGFyZVxuXHRcdGdvaW5nIHRvIGFwcGVhciBpbnNpZGUgdGhlIHt7e3Bvc3QuaHRtbH19fSBibG9jayxcblx0XHRzbyB3ZSBoYXZlIHRvIHVzZSB0aGUgOmdsb2JhbCguLi4pIG1vZGlmaWVyIHRvIHRhcmdldFxuXHRcdGFsbCBlbGVtZW50cyBpbnNpZGUgLmNvbnRlbnRcblx0Ki9cblx0LmNvbnRlbnQgOmdsb2JhbChoMikge1xuXHRcdGZvbnQtc2l6ZTogMS40ZW07XG5cdFx0Zm9udC13ZWlnaHQ6IDUwMDtcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwocHJlKSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcblx0XHQtd2Via2l0LWJveC1zaGFkb3c6IGluc2V0IDFweCAxcHggNXB4IHJnYmEoMCwwLDAsMC4wNSk7XG5cdFx0ICAgICAgICBib3gtc2hhZG93OiBpbnNldCAxcHggMXB4IDVweCByZ2JhKDAsMCwwLDAuMDUpO1xuXHRcdHBhZGRpbmc6IDAuNWVtO1xuXHRcdGJvcmRlci1yYWRpdXM6IDJweDtcblx0XHRvdmVyZmxvdy14OiBhdXRvO1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbChwcmUpIDpnbG9iYWwoY29kZSkge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRcdHBhZGRpbmc6IDA7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKHVsKSB7XG5cdFx0bGluZS1oZWlnaHQ6IDEuNTtcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwobGkpIHtcblx0XHRtYXJnaW46IDAgMCAwLjVlbSAwO1xuXHR9XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbk55WXk5eWIzVjBaWE12WW14dlp5OWJjMngxWjEwdWMzWmxiSFJsSWwwc0ltNWhiV1Z6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUk3UTBGRFF6czdPenM3T3p0RlFVOURPME5CUTBRN1JVRkRReXhuUWtGQlowSTdSVUZEYUVJc1owSkJRV2RDTzBOQlEycENPenREUVVWQk8wVkJRME1zZVVKQlFYbENPMFZCUTNwQ0xITkVRVUU0UXp0VlFVRTVReXc0UTBGQk9FTTdSVUZET1VNc1kwRkJZenRGUVVOa0xHdENRVUZyUWp0RlFVTnNRaXhuUWtGQlowSTdRMEZEYWtJN08wTkJSVUU3UlVGRFF5dzJRa0ZCTmtJN1JVRkROMElzVlVGQlZUdERRVU5ZT3p0RFFVVkJPMFZCUTBNc1owSkJRV2RDTzBOQlEycENPenREUVVWQk8wVkJRME1zYlVKQlFXMUNPME5CUTNCQ0lpd2labWxzWlNJNkluTnlZeTl5YjNWMFpYTXZZbXh2Wnk5YmMyeDFaMTB1YzNabGJIUmxJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpWEc1Y2RDOHFYRzVjZEZ4MFFua2daR1ZtWVhWc2RDd2dRMU5USUdseklHeHZZMkZzYkhrZ2MyTnZjR1ZrSUhSdklIUm9aU0JqYjIxd2IyNWxiblFzWEc1Y2RGeDBZVzVrSUdGdWVTQjFiblZ6WldRZ2MzUjViR1Z6SUdGeVpTQmtaV0ZrTFdOdlpHVXRaV3hwYldsdVlYUmxaQzVjYmx4MFhIUkpiaUIwYUdseklIQmhaMlVzSUZOMlpXeDBaU0JqWVc0bmRDQnJibTkzSUhkb2FXTm9JR1ZzWlcxbGJuUnpJR0Z5WlZ4dVhIUmNkR2R2YVc1bklIUnZJR0Z3Y0dWaGNpQnBibk5wWkdVZ2RHaGxJSHQ3ZTNCdmMzUXVhSFJ0YkgxOWZTQmliRzlqYXl4Y2JseDBYSFJ6YnlCM1pTQm9ZWFpsSUhSdklIVnpaU0IwYUdVZ09tZHNiMkpoYkNndUxpNHBJRzF2WkdsbWFXVnlJSFJ2SUhSaGNtZGxkRnh1WEhSY2RHRnNiQ0JsYkdWdFpXNTBjeUJwYm5OcFpHVWdMbU52Ym5SbGJuUmNibHgwS2k5Y2JseDBMbU52Ym5SbGJuUWdPbWRzYjJKaGJDaG9NaWtnZTF4dVhIUmNkR1p2Ym5RdGMybDZaVG9nTVM0MFpXMDdYRzVjZEZ4MFptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2JseDBmVnh1WEc1Y2RDNWpiMjUwWlc1MElEcG5iRzlpWVd3b2NISmxLU0I3WEc1Y2RGeDBZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJMlk1WmpsbU9UdGNibHgwWEhSaWIzZ3RjMmhoWkc5M09pQnBibk5sZENBeGNIZ2dNWEI0SURWd2VDQnlaMkpoS0RBc01Dd3dMREF1TURVcE8xeHVYSFJjZEhCaFpHUnBibWM2SURBdU5XVnRPMXh1WEhSY2RHSnZjbVJsY2kxeVlXUnBkWE02SURKd2VEdGNibHgwWEhSdmRtVnlabXh2ZHkxNE9pQmhkWFJ2TzF4dVhIUjlYRzVjYmx4MExtTnZiblJsYm5RZ09tZHNiMkpoYkNod2NtVXBJRHBuYkc5aVlXd29ZMjlrWlNrZ2UxeHVYSFJjZEdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVYSFJjZEhCaFpHUnBibWM2SURBN1hHNWNkSDFjYmx4dVhIUXVZMjl1ZEdWdWRDQTZaMnh2WW1Gc0tIVnNLU0I3WEc1Y2RGeDBiR2x1WlMxb1pXbG5hSFE2SURFdU5UdGNibHgwZlZ4dVhHNWNkQzVqYjI1MFpXNTBJRHBuYkc5aVlXd29iR2twSUh0Y2JseDBYSFJ0WVhKbmFXNDZJREFnTUNBd0xqVmxiU0F3TzF4dVhIUjlYRzRpWFgwPSAqLzwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPntwb3N0LnRpdGxlfTwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48aDE+e3Bvc3QudGl0bGV9PC9oMT5cblxuPGRpdiBjbGFzcz0nY29udGVudCc+XG5cdHtAaHRtbCBwb3N0Lmh0bWx9XG48L2Rpdj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QkMsc0JBQVEsQ0FBQyxBQUFRLEVBQUUsQUFBRSxDQUFDLEFBQ3JCLFNBQVMsQ0FBRSxLQUFLLENBQ2hCLFdBQVcsQ0FBRSxHQUFHLEFBQ2pCLENBQUMsQUFFRCxzQkFBUSxDQUFDLEFBQVEsR0FBRyxBQUFFLENBQUMsQUFDdEIsZ0JBQWdCLENBQUUsT0FBTyxDQUN6QixrQkFBa0IsQ0FBRSxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FDOUMsVUFBVSxDQUFFLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUN0RCxPQUFPLENBQUUsS0FBSyxDQUNkLGFBQWEsQ0FBRSxHQUFHLENBQ2xCLFVBQVUsQ0FBRSxJQUFJLEFBQ2pCLENBQUMsQUFFRCxzQkFBUSxDQUFDLEFBQVEsR0FBRyxBQUFDLENBQUMsQUFBUSxJQUFJLEFBQUUsQ0FBQyxBQUNwQyxnQkFBZ0IsQ0FBRSxXQUFXLENBQzdCLE9BQU8sQ0FBRSxDQUFDLEFBQ1gsQ0FBQyxBQUVELHNCQUFRLENBQUMsQUFBUSxFQUFFLEFBQUUsQ0FBQyxBQUNyQixXQUFXLENBQUUsR0FBRyxBQUNqQixDQUFDLEFBRUQsc0JBQVEsQ0FBQyxBQUFRLEVBQUUsQUFBRSxDQUFDLEFBQ3JCLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEFBQ3BCLENBQUMifQ==*/");

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcm91dGVzL2Jsb2cvW3NsdWddLnN2ZWx0ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eUNBNkRLLElBQUksQ0FBQyxLQUFLLG9DQUdQLElBQUksQ0FBQyxJQUFJOztvQ0FOUixJQUFJLENBQUMsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzREQUFWLElBQUksQ0FBQyxLQUFLOzs7O3NEQUdkLElBQUksQ0FBQyxLQUFLOzs7O3dEQUdQLElBQUksQ0FBQyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEvRFQsZUFBZSxPQUFPLENBQUMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7QUFDakQ7QUFDQTtBQUNBLENBQUMsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUMxRCxDQUFDLE1BQU0sSUFBSSxHQUFHLE1BQU0sR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDOztBQUUvQixDQUFDLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7QUFDekIsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDO0FBQ3hCLEVBQUUsTUFBTTtBQUNSLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUN2QyxFQUFFO0FBQ0YsQ0FBQzs7O0NBSU0sTUFBSSxnQkFBSSxDQUFDIiwiZmlsZSI6ImRjYjFiY2JjODk2NDIyYTA1YWRiL2Jsb2dfJHNsdWcuYmxvZ18kc2x1Zy5qcyIsInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuXHRleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuXHRcdC8vIHRoZSBgc2x1Z2AgcGFyYW1ldGVyIGlzIGF2YWlsYWJsZSBiZWNhdXNlXG5cdFx0Ly8gdGhpcyBmaWxlIGlzIGNhbGxlZCBbc2x1Z10uc3ZlbHRlXG5cdFx0Y29uc3QgcmVzID0gYXdhaXQgdGhpcy5mZXRjaChgYmxvZy8ke3BhcmFtcy5zbHVnfS5qc29uYCk7XG5cdFx0Y29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cblx0XHRpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7XG5cdFx0XHRyZXR1cm4geyBwb3N0OiBkYXRhIH07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuZXJyb3IocmVzLnN0YXR1cywgZGF0YS5tZXNzYWdlKTtcblx0XHR9XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRleHBvcnQgbGV0IHBvc3Q7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuXHQvKlxuXHRcdEJ5IGRlZmF1bHQsIENTUyBpcyBsb2NhbGx5IHNjb3BlZCB0byB0aGUgY29tcG9uZW50LFxuXHRcdGFuZCBhbnkgdW51c2VkIHN0eWxlcyBhcmUgZGVhZC1jb2RlLWVsaW1pbmF0ZWQuXG5cdFx0SW4gdGhpcyBwYWdlLCBTdmVsdGUgY2FuJ3Qga25vdyB3aGljaCBlbGVtZW50cyBhcmVcblx0XHRnb2luZyB0byBhcHBlYXIgaW5zaWRlIHRoZSB7e3twb3N0Lmh0bWx9fX0gYmxvY2ssXG5cdFx0c28gd2UgaGF2ZSB0byB1c2UgdGhlIDpnbG9iYWwoLi4uKSBtb2RpZmllciB0byB0YXJnZXRcblx0XHRhbGwgZWxlbWVudHMgaW5zaWRlIC5jb250ZW50XG5cdCovXG5cdC5jb250ZW50IDpnbG9iYWwoaDIpIHtcblx0XHRmb250LXNpemU6IDEuNGVtO1xuXHRcdGZvbnQtd2VpZ2h0OiA1MDA7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKHByZSkge1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7XG5cdFx0LXdlYmtpdC1ib3gtc2hhZG93OiBpbnNldCAxcHggMXB4IDVweCByZ2JhKDAsMCwwLDAuMDUpO1xuXHRcdCAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMXB4IDFweCA1cHggcmdiYSgwLDAsMCwwLjA1KTtcblx0XHRwYWRkaW5nOiAwLjVlbTtcblx0XHRib3JkZXItcmFkaXVzOiAycHg7XG5cdFx0b3ZlcmZsb3cteDogYXV0bztcblx0fVxuXG5cdC5jb250ZW50IDpnbG9iYWwocHJlKSA6Z2xvYmFsKGNvZGUpIHtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5cblx0LmNvbnRlbnQgOmdsb2JhbCh1bCkge1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XG5cdH1cblxuXHQuY29udGVudCA6Z2xvYmFsKGxpKSB7XG5cdFx0bWFyZ2luOiAwIDAgMC41ZW0gMDtcblx0fVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OeVl5OXliM1YwWlhNdllteHZaeTliYzJ4MVoxMHVjM1psYkhSbElsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJN1EwRkRRenM3T3pzN096dEZRVTlETzBOQlEwUTdSVUZEUXl4blFrRkJaMEk3UlVGRGFFSXNaMEpCUVdkQ08wTkJRMnBDT3p0RFFVVkJPMFZCUTBNc2VVSkJRWGxDTzBWQlEzcENMSE5FUVVFNFF6dFZRVUU1UXl3NFEwRkJPRU03UlVGRE9VTXNZMEZCWXp0RlFVTmtMR3RDUVVGclFqdEZRVU5zUWl4blFrRkJaMEk3UTBGRGFrSTdPME5CUlVFN1JVRkRReXcyUWtGQk5rSTdSVUZETjBJc1ZVRkJWVHREUVVOWU96dERRVVZCTzBWQlEwTXNaMEpCUVdkQ08wTkJRMnBDT3p0RFFVVkJPMFZCUTBNc2JVSkJRVzFDTzBOQlEzQkNJaXdpWm1sc1pTSTZJbk55WXk5eWIzVjBaWE12WW14dlp5OWJjMngxWjEwdWMzWmxiSFJsSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaVhHNWNkQzhxWEc1Y2RGeDBRbmtnWkdWbVlYVnNkQ3dnUTFOVElHbHpJR3h2WTJGc2JIa2djMk52Y0dWa0lIUnZJSFJvWlNCamIyMXdiMjVsYm5Rc1hHNWNkRngwWVc1a0lHRnVlU0IxYm5WelpXUWdjM1I1YkdWeklHRnlaU0JrWldGa0xXTnZaR1V0Wld4cGJXbHVZWFJsWkM1Y2JseDBYSFJKYmlCMGFHbHpJSEJoWjJVc0lGTjJaV3gwWlNCallXNG5kQ0JyYm05M0lIZG9hV05vSUdWc1pXMWxiblJ6SUdGeVpWeHVYSFJjZEdkdmFXNW5JSFJ2SUdGd2NHVmhjaUJwYm5OcFpHVWdkR2hsSUh0N2UzQnZjM1F1YUhSdGJIMTlmU0JpYkc5amF5eGNibHgwWEhSemJ5QjNaU0JvWVhabElIUnZJSFZ6WlNCMGFHVWdPbWRzYjJKaGJDZ3VMaTRwSUcxdlpHbG1hV1Z5SUhSdklIUmhjbWRsZEZ4dVhIUmNkR0ZzYkNCbGJHVnRaVzUwY3lCcGJuTnBaR1VnTG1OdmJuUmxiblJjYmx4MEtpOWNibHgwTG1OdmJuUmxiblFnT21kc2IySmhiQ2hvTWlrZ2UxeHVYSFJjZEdadmJuUXRjMmw2WlRvZ01TNDBaVzA3WEc1Y2RGeDBabTl1ZEMxM1pXbG5hSFE2SURVd01EdGNibHgwZlZ4dVhHNWNkQzVqYjI1MFpXNTBJRHBuYkc5aVlXd29jSEpsS1NCN1hHNWNkRngwWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJZNVpqbG1PVHRjYmx4MFhIUmliM2d0YzJoaFpHOTNPaUJwYm5ObGRDQXhjSGdnTVhCNElEVndlQ0J5WjJKaEtEQXNNQ3d3TERBdU1EVXBPMXh1WEhSY2RIQmhaR1JwYm1jNklEQXVOV1Z0TzF4dVhIUmNkR0p2Y21SbGNpMXlZV1JwZFhNNklESndlRHRjYmx4MFhIUnZkbVZ5Wm14dmR5MTRPaUJoZFhSdk8xeHVYSFI5WEc1Y2JseDBMbU52Ym5SbGJuUWdPbWRzYjJKaGJDaHdjbVVwSURwbmJHOWlZV3dvWTI5a1pTa2dlMXh1WEhSY2RHSmhZMnRuY205MWJtUXRZMjlzYjNJNklIUnlZVzV6Y0dGeVpXNTBPMXh1WEhSY2RIQmhaR1JwYm1jNklEQTdYRzVjZEgxY2JseHVYSFF1WTI5dWRHVnVkQ0E2WjJ4dlltRnNLSFZzS1NCN1hHNWNkRngwYkdsdVpTMW9aV2xuYUhRNklERXVOVHRjYmx4MGZWeHVYRzVjZEM1amIyNTBaVzUwSURwbmJHOWlZV3dvYkdrcElIdGNibHgwWEhSdFlYSm5hVzQ2SURBZ01DQXdMalZsYlNBd08xeHVYSFI5WEc0aVhYMD0gKi88L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT57cG9zdC50aXRsZX08L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPntwb3N0LnRpdGxlfTwvaDE+XG5cbjxkaXYgY2xhc3M9J2NvbnRlbnQnPlxuXHR7QGh0bWwgcG9zdC5odG1sfVxuPC9kaXY+XG4iXSwic291cmNlUm9vdCI6IiJ9